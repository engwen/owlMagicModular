<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.owl.shiro.dao.OwlMenuDao">
    <resultMap id="BaseResultMap" type="com.owl.shiro.model.OwlMenu">
        <!-- 请添加所需要的属性-->
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="btn_id" property="btnId" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Table_ID_Name">
        id
    </sql>
    <sql id="Table_Name">
        owl_menu
    </sql>
    <sql id="Base_Column_List">
        <include refid="Table_ID_Name"/>
        ,
        name,btn_id,
        create_time, update_time
    </sql>
    <sql id="Order_Name">
        name
    </sql>

    <sql id="Select_Like">
        <trim prefix="where" suffixOverrides="and">
            <if test="null != model">
                <choose>
                    <when test="null != model.id">
                        <include refid="Table_ID_Name"/>
                        = #{model.id}
                    </when>
                    <otherwise>
                        <if test="null != model.name">
                            name like CONCAT(CONCAT('%',#{model.name}),'%')
                            AND
                        </if>
                        <if test="null != model.btnId">
                            btn_id like CONCAT(CONCAT('%',#{model.btnId}),'%')
                            AND
                        </if>
                    </otherwise>
                </choose>
            </if>
        </trim>
    </sql>


    <sql id="Select_Exact">
        <trim prefix="where" suffixOverrides="and">
            <if test="null != model">
                <choose>
                    <when test="null != model.id">
                        <include refid="Table_ID_Name"/>
                        = #{model.id}
                    </when>
                    <otherwise>
                        <if test="null != model.name">
                            name = #{model.name}
                            AND
                        </if>
                        <if test="null != model.btnId">
                            btn_id = CONCAT(CONCAT('%',#{model.btnId}),'%')
                            AND
                        </if>
                    </otherwise>
                </choose>
            </if>
        </trim>
    </sql>


    <insert id="insertSelective" parameterType="com.owl.shiro.model.OwlMenu">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            select LAST_INSERT_ID()
        </selectKey>
        insert into
        <include refid="Table_Name"/>
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">
                name,
            </if>
            <if test="btnId != null">
                btn_id,
            </if>
            create_time,update_time
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">
                #{name},
            </if>
            <if test="btnId != null">
                #{btnId},
            </if>
            null,null
        </trim>
    </insert>

    <!-- 请添加所需要的属性-->
    <insert id="insertList">
        insert into
        <include refid="Table_Name"/>
        (
        name,btn_id,
        create_time, update_time
        )
        values
        <foreach collection="modelList" item="model" separator=",">
            (
            #{model.name},#{model.btnId},
            null , null
            )
        </foreach>
    </insert>

    <update id="updateBySelective">
        update
        <include refid="Table_Name"/>
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="btnId != null">
                btn_id = #{btnId},
            </if>
            update_time = NULL
        </set>
        where
        <include refid="Table_ID_Name"/>
        = #{id,jdbcType=BIGINT}
    </update>

    <delete id="deleteBySelective">
        delete from
        <include refid="Table_Name"/>
        <trim prefix="where" suffixOverrides="and">
            <choose>
                <when test="id != null">
                    <include refid="Table_ID_Name"/>
                    = #{id}
                </when>
                <otherwise>
                    <if test="null != parentId">
                        parent_id = #{parentId}
                    </if>
                </otherwise>
            </choose>
        </trim>
    </delete>


    <!-- 以下不需要改變  -->

    <delete id="deleteByIdList">
        delete from
        <include refid="Table_Name"/>
        WHERE
        <include refid="Table_ID_Name"/>
        IN
        <foreach collection="idList" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>

    <select id="selectBySelective" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"/>
        <include refid="Select_Like"/>
        ORDER BY CONVERT(
        <include refid="Order_Name"/>
        using gbk) ASC
    </select>

    <select id="selectByExact" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"/>
        <include refid="Select_Exact"/>
        ORDER BY CONVERT(
        <include refid="Order_Name"/>
        using gbk) ASC
    </select>

    <select id="countSumByCondition" resultType="java.lang.Integer">
        select count(<include refid="Table_ID_Name"/>) from
        <include refid="Table_Name"/>
        <include refid="Select_Like"/>
    </select>

    <select id="listByCondition" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"/>
        <include refid="Select_Like"/>
        ORDER BY CONVERT(
        <include refid="Order_Name"/>
        using gbk) ASC
        limit #{upLimit},#{rows}
    </select>


    <select id="menuListByRole" resultMap="BaseResultMap">
        select
        a.id,btn_id, a.name,a.create_time,a.update_time
        from owl_menu a
        LEFT JOIN owl_role_menu b
        ON b.menu_id = a.id
        WHERE b.role_id IN
        <foreach collection="idList" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
        ORDER BY CONVERT(
        a.name
        using gbk) ASC
    </select>

    <select id="menuListByPage" resultMap="BaseResultMap">
        select
        a.id,btn_id, a.name,a.create_time,a.update_time
        from owl_menu a
        LEFT JOIN owl_page_menu b
        ON b.menu_id = a.id
        WHERE b.page_id = #{id}
        ORDER BY CONVERT(
        a.name
        using gbk) ASC
    </select>

    <select id="menuListByPageRole" resultMap="BaseResultMap">
        select
        a.id,btn_id, a.name,a.create_time,a.update_time
        from owl_menu a
        LEFT JOIN owl_page_menu b
        ON a.id = b.menu_id
        LEFT JOIN owl_role_menu c
        on a.id = c.menu_id
        WHERE b.page_id = #{pageId}
        and c.role_id = #{roleId}
        ORDER BY CONVERT(
        a.name
        using gbk) ASC
    </select>
</mapper>